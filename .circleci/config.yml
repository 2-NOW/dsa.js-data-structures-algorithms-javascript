# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/node:lts # ...with this image as the primary container; this is where all `steps` will run
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: node version
          command: node -v
      - run:
          name: NPM version
          command: npm -v

      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: npm install
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

      - run: # run tests
          name: run tests
          command: npm run ci

      - store_artifacts: # special step to save test results as as artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: test-results.xml
          prefix: tests
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: coverage
          prefix: coverage
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: test-results.xml

  book:
    docker:
      - image: circleci/ruby:2.5.3-stretch
    steps:
      - add_ssh_keys:
          fingerprints:
            - "b5:40:36:ee:3c:52:25:dd:c7:41:f3:10:d1:ce:f9:33"
      - checkout
      - run:
          name: checkout repo and submodules
          command: git submodule update --init --recursive
      - run:
          name: bundler version
          command: bundle -v
      - run:
          name: ruby version
          command: ruby -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - ruby-{{ checksum "book/config/Gemfile.lock" }}
            - ruby-
      - run:
          name: install mathematical
          command: cd book/config && bundle check || sudo apt-get update && sudo apt-get -qq -y install bison flex libffi-dev libxml2-dev libgdk-pixbuf2.0-dev libcairo2-dev libpango1.0-dev ttf-lyx

      - run:
          name: Bundle Install
          command: cd book/config && bundle check || bundle install
      # Store bundle cache
      - save_cache:
          key: ruby-{{ checksum "book/config/Gemfile.lock" }}
          paths:
            - book/config/vendor/bundle

      - run:
          name: generate PDF
          command: cd book/config && make pdf

workflows:
  version: 2
  build_and_book:
    jobs:
      - build
      - book
